<!DOCTYPE flight_plan SYSTEM "../flight_plan.dtd">

<flight_plan name="Flight plan to measure the ground effect in the TU Delft Cyberzoo"
             alt="1.0" ground_alt="0" security_height="0.01"
             lat0="51.9906361" lon0="4.3767874" max_dist_from_home="8">
    <header>
        #include "subsystems/datalink/datalink.h"
        #include "subsystems/electrical.h"
        #include "subsystems/radio_control.h"
        #include "subsystems/ahrs.h"

        // Note: use 'git submodule update --init -- sw/ext/tudelft_gazebo_models/'
        // to download the required models.
        #define NPS_GAZEBO_WORLD "cyberzoo.world"
    </header>
    <waypoints>
        <waypoint lat="51.990631" lon="4.376796" name="HOME"/>
        <waypoint name="CLIMB" x="1.9" y="1.0"/>
        <waypoint name="STDBY" x="1.9" y="1.0"/>
        <waypoint name="TD" x="0.8" y="-1.7"/>
        <waypoint name="MEASURE_START" x="2.9" y="-1.5" height="1.0" />
        <waypoint name="MEASURE_0" x="-0.6" y="-3.0" height="0.4" />
        <waypoint name="MEASURE_1" x="-0.6" y="-3.0" height="0.35" />
        <waypoint name="MEASURE_2" x="-0.6" y="-3.0" height="0.3" />
        <waypoint name="MEASURE_3" x="1.0" y="1.0" height="0.25" />
        <waypoint name="MEASURE_4" x="1.0" y="1.0" height="0.2" />
        <waypoint name="MEASURE_5" x="1.0" y="1.0" height="0.15" />
        <waypoint name="MEASURE_6" x="1.0" y="1.0" height="0.1" />
        <waypoint name="MEASURE_7" x="1.0" y="1.0" height="0.05" />
        <waypoint lat="51.9905836" lon="4.3767729" name="_CZ1"/>
        <waypoint lat="51.9906365" lon="4.3767138" name="_CZ2"/>
        <waypoint lat="51.990680" lon="4.376805" name="_CZ3"/>
        <waypoint lat="51.9906226" lon="4.3768699" name="_CZ4"/>
        <waypoint lat="51.990594" lon="4.376776" name="_OZ1"/>
        <waypoint lat="51.990636" lon="4.376733" name="_OZ2"/>
        <waypoint lat="51.990671" lon="4.376806" name="_OZ3"/>
        <waypoint lat="51.990624" lon="4.376852" name="_OZ4"/>
    </waypoints>
    <sectors>
        <sector color="red" name="CyberZoo">
            <corner name="_CZ1"/>
            <corner name="_CZ2"/>
            <corner name="_CZ3"/>
            <corner name="_CZ4"/>
        </sector>
        <sector color="#FF9922" name="ObstacleZone">
            <corner name="_OZ1"/>
            <corner name="_OZ2"/>
            <corner name="_OZ3"/>
            <corner name="_OZ4"/>
        </sector>
    </sectors>
    <exceptions>
        <!-- RC lost -->
        <!--exception cond="((radio_control.status == RC_REALLY_LOST) &&
          !(IndexOfBlock('Holding point') > nav_block) &&
          !(nav_block >= IndexOfBlock('Land here')) &&
          (autopilot_in_flight() == true) )" deroute="Standby"/-->
        <!-- Datalink lost (constant RPM descent) -->
        <exception cond="((datalink_time > 5) &&
      !(IndexOfBlock('Holding point') > nav_block) &&
      !(nav_block >= IndexOfBlock('Land here')) &&
      (autopilot_in_flight() == true) )" deroute="Land here"/>
        <!-- Geofencing XY -->
        <exception cond="(!InsideCyberZoo(GetPosX(), GetPosY()) &&
      !(IndexOfBlock('Holding point') > nav_block) &&
      !(nav_block >= IndexOfBlock('Land here')) &&
      (autopilot_in_flight() == true) )" deroute="Land here"/>
        <!-- Geofencing Z 2.5 -->
        <exception cond="((GetPosAlt() > 3.5) &&
      !(IndexOfBlock('Holding point') > nav_block) &&
      !(nav_block >= IndexOfBlock('Land here')) &&
      (autopilot_in_flight() == true) )" deroute="Land here"/>
        <!-- Geofencing Z 4.5 (constant RPM descent)-->
        <exception cond="((GetPosAlt() > 4.5) &&
      !(IndexOfBlock('Holding point') > nav_block) &&
      (autopilot_in_flight() == true) )" deroute="Landed"/>
        <!-- Bat low -->
        <!--<exception cond="(electrical.bat_low &&-->
      <!--!(IndexOfBlock('Holding point') > nav_block) &&-->
      <!--!(nav_block >= IndexOfBlock('Land here')) &&-->
      <!--(autopilot_in_flight() == true) )" deroute="Land here"/>  -->
        <!-- Bat critical (constant RPM no stabilization)-->
        <exception cond="(electrical.bat_critical &&
      !(IndexOfBlock('Holding point') > nav_block) &&
      !(nav_block >= IndexOfBlock('Land here')) &&
      (autopilot_in_flight() == true) )" deroute="Land here"/>
    </exceptions>
    <blocks>
        <block name="Wait GPS">
            <call_once fun="NavKillThrottle()"/>
            <while cond="!GpsFixValid()"/>
        </block>
        <block name="Geo init">
            <while cond="LessThan(NavBlockTime(), 2)"/>
            <call_once fun="NavSetAltitudeReferenceHere()"/>
        </block>
        <block name="Holding point">
            <call_once fun="NavKillThrottle()"/>
            <attitude pitch="0" roll="0" throttle="0" until="FALSE" vmode="throttle"/>
        </block>
        <!--<block name="Initialize External force estimator">-->
            <!--<call_once fun="rl_obstacle_avoidance_turn_on()"/>-->
        <!--</block>-->
        <block key="r" name="Start Engine">
            <call_once fun="rl_obstacle_avoidance_turn_on()"/>
            <call_once fun="rl_obstacle_avoidance_flight_status(10)" />
            <call_once fun="NavResurrect()"/>
            <attitude pitch="0" roll="0" throttle="0" until="FALSE" vmode="throttle"/>
            <!--<call_once fun="NavResurrect()"/>-->
        </block>
        <block key="t" name="Takeoff" strip_button="Takeoff" strip_icon="takeoff.png">
            <call_once fun="rl_obstacle_avoidance_flight_status(20)" />
            <exception cond="GetPosAlt() > 1.0" deroute="Standby"/>
            <call_once fun="NavSetWaypointHere(WP_CLIMB)"/>
            <stay climb="nav_climb_vspeed" vmode="climb" wp="CLIMB"/>
        </block>
        <block key="s" name="Standby" strip_button="Standby" strip_icon="home.png">
            <call_once fun="rl_obstacle_avoidance_flight_status(30)" />
            <call_once fun="NavSetWaypointHere(WP_STDBY)"/>
            <stay wp="STDBY"/>
        </block>
        <block key="g" name="Go to measurement point" strip_button="Go" strip_icon="lookfore.png">
            <call_once fun="rl_obstacle_avoidance_flight_status(40)" />
            <go wp="MEASURE_START"/>
            <call_once fun="nav_set_heading_deg(0)" />
            <stay wp="MEASURE_START"/>
        </block>
        <block key="m" name="Start measurements">
            <call_once fun="rl_obstacle_avoidance_flight_status(50)" />
            <call_once fun="NavSetWaypointHere(WP_MEASURE_0)"/>
            <call_once fun="NavSetWaypointHere(WP_MEASURE_1)"/>
            <call_once fun="NavSetWaypointHere(WP_MEASURE_2)"/>
            <call_once fun="NavSetWaypointHere(WP_MEASURE_3)"/>
            <call_once fun="NavSetWaypointHere(WP_MEASURE_4)"/>
            <call_once fun="NavSetWaypointHere(WP_MEASURE_5)"/>
            <call_once fun="NavSetWaypointHere(WP_MEASURE_6)"/>
            <call_once fun="NavSetWaypointHere(WP_MEASURE_7)"/>
            <go wp="MEASURE_0"/>
            <stay wp="MEASURE_0" until="stage_time>2"/>
            <go wp="MEASURE_1"/>
            <stay wp="MEASURE_1" until="stage_time>2"/>
            <go wp="MEASURE_2"/>
            <stay wp="MEASURE_2" until="stage_time>2"/>
            <go wp="MEASURE_3"/>
            <stay wp="MEASURE_3" until="stage_time>2"/>
            <go wp="MEASURE_4"/>
            <stay wp="MEASURE_4" until="stage_time>2"/>
            <go wp="MEASURE_5"/>
            <stay wp="MEASURE_5" until="stage_time>8"/>
            <go wp="MEASURE_6"/>
            <stay wp="MEASURE_6" until="stage_time>8"/>
            <go wp="MEASURE_7"/>
            <stay wp="MEASURE_7" until="stage_time>8"/>
        </block>
        <block key="e" name="End measurements">
            <call_once fun="rl_obstacle_avoidance_flight_status(80)" />
            <go wp="MEASURE_START" />
            <stay wp="MEASURE_START" />
        </block>
        <block name="Go Home">
            <go wp="HOME"/>
            <stay wp="HOME"/>
        </block>
        <block key="l" name="Land here" strip_button="Land Here" strip_icon="land-right.png">
            <call_once fun="rl_obstacle_avoidance_flight_status(90)" />
            <call_once fun="NavSetWaypointHere(WP_TD)"/>
            <go wp="TD"/>
            <deroute block="Flare"/>
        </block>
        <block name="Land">
            <go wp="TD"/>
            <deroute block="Flare"/>
        </block>
        <block name="Flare">
            <exception cond="NavDetectGround()" deroute="Holding point"/>
            <exception cond="!nav_is_in_flight()" deroute="Landed"/>
            <exception cond="0.10 > GetPosAlt()" deroute="Landed"/>
            <call_once fun="NavStartDetectGround()"/>
            <stay climb="nav_descend_vspeed" vmode="climb" wp="TD"/>
        </block>
        <block name="Landed">
            <call_once fun="rl_obstacle_avoidance_flight_status(99)" />
            <call_once fun="NavKillThrottle()"/>
            <call_once fun="rl_obstacle_avoidance_turn_off()"/>
            <attitude pitch="0" roll="0" throttle="0" until="FALSE" vmode="throttle"/>
        </block>
    </blocks>
</flight_plan>
