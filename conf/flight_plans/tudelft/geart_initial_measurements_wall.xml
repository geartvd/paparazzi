<!DOCTYPE flight_plan SYSTEM "../flight_plan.dtd">

<flight_plan name="Flight plan to measure the wall effect in the TU Delft Cyberzoo"
             alt="1.0" ground_alt="0" security_height="0.01"
             lat0="51.9906360" lon0="4.3767874" max_dist_from_home="8">
    <header>
        #include "subsystems/datalink/datalink.h"
        #include "subsystems/electrical.h"
        #include "subsystems/radio_control.h"
        #include "subsystems/ahrs.h"

        // Note: use 'git submodule update --init -- sw/ext/tudelft_gazebo_models/'
        // to download the required models.
        #define NPS_GAZEBO_WORLD "cyberzoo.world"
    </header>
    <waypoints>
        <waypoint lat="51.990631" lon="4.376796" name="HOME"/>
        <waypoint name="CLIMB" x="1.9" y="1.0"/>
        <waypoint name="STDBY" x="1.9" y="1.0"/>
        <waypoint name="TD" x="0.8" y="-1.7"/>
        <waypoint name="MEASURE_START" x="-0.8710322943932031" y="-3.726905412412255" height="1.0" />
        <waypoint name="MEASURE_0" x="-0.8710322943932031" y="-3.726905412412255" height="1.0" />
        <waypoint name="MEASURE_1" x="-0.9131562054536682" y="-3.7538419324210235" height="1.0" />
        <waypoint name="MEASURE_2" x="-0.9552801166077083" y="-3.7807784522186227" height="1.0" />
        <waypoint name="MEASURE_3" x="-0.9974040277037103" y="-3.807714972593221" height="1.0" />
        <waypoint name="MEASURE_4" x="-1.0395279388577503" y="-3.8346514923908197" height="1.0" />
        <waypoint name="MEASURE_5" x="-1.0816518499537526" y="-3.8615880127654174" height="1.0" />
        <waypoint name="MEASURE_6" x="-1.1237757610142176" y="-3.8885245322006874" height="1.0" />
        <waypoint name="MEASURE_7" x="-1.1658996721682577" y="-3.9154610525717857" height="1.0" />
        <waypoint name="MEASURE_8" x="-1.2080235832642598" y="-3.942397572946384" height="1.0" />
        <waypoint name="MEASURE_9" x="-1.2501474944182998" y="-3.969334092743983" height="1.0" />
        <waypoint name="MEASURE_10" x="-1.292271405514302" y="-3.996270613118581" height="1.0" />
        <waypoint name="MEASURE_11" x="-1.3343953166103042" y="-4.02320713291968" height="1.0" />
        <waypoint name="MEASURE_12" x="-1.376519227728807" y="-4.050143652924948" height="1.0" />
        <waypoint name="MEASURE_13" x="-1.4186431388248093" y="-4.077080172726047" height="1.0" />
        <waypoint name="MEASURE_14" x="-1.4607670499788494" y="-4.104016693097146" height="1.0" />
        <waypoint name="MEASURE_15" x="-1.5028909610748515" y="-4.130953212898245" height="1.0" />
        <waypoint name="MEASURE_16" x="-1.5450148721708534" y="-4.157889733272842" height="1.0" />
        <waypoint name="MEASURE_17" x="-1.5871387833248936" y="-4.184826253643941" height="1.0" />
        <waypoint name="MEASURE_18" x="-1.6292626943853588" y="-4.211762773079211" height="1.0" />
        <waypoint name="MEASURE_19" x="-1.6713866055393987" y="-4.238699293450309" height="1.0" />
        <waypoint lat="51.9905836" lon="4.3767729" name="_CZ1"/>
        <waypoint lat="51.9906365" lon="4.3767138" name="_CZ2"/>
        <waypoint lat="51.990680" lon="4.376805" name="_CZ3"/>
        <waypoint lat="51.9906226" lon="4.3768699" name="_CZ4"/>
        <waypoint lat="51.990594" lon="4.376776" name="_OZ1"/>
        <waypoint lat="51.990636" lon="4.376733" name="_OZ2"/>
        <waypoint lat="51.990671" lon="4.376806" name="_OZ3"/>
        <waypoint lat="51.990624" lon="4.376852" name="_OZ4"/>
    </waypoints>
    <sectors>
        <sector color="red" name="CyberZoo">
            <corner name="_CZ1"/>
            <corner name="_CZ2"/>
            <corner name="_CZ3"/>
            <corner name="_CZ4"/>
        </sector>
        <sector color="#FF9922" name="ObstacleZone">
            <corner name="_OZ1"/>
            <corner name="_OZ2"/>
            <corner name="_OZ3"/>
            <corner name="_OZ4"/>
        </sector>
    </sectors>
    <exceptions>
        <!-- RC lost -->
        <!--exception cond="((radio_control.status == RC_REALLY_LOST) &&
          !(IndexOfBlock('Holding point') > nav_block) &&
          !(nav_block >= IndexOfBlock('Land here')) &&
          (autopilot_in_flight() == true) )" deroute="Standby"/-->
        <!-- Datalink lost (constant RPM descent) -->
        <exception cond="((datalink_time > 5) &&
      !(IndexOfBlock('Holding point') > nav_block) &&
      !(nav_block >= IndexOfBlock('Land here')) &&
      (autopilot_in_flight() == true) )" deroute="Land here"/>
        <!-- Geofencing XY -->
        <exception cond="(!InsideCyberZoo(GetPosX(), GetPosY()) &&
      !(IndexOfBlock('Holding point') > nav_block) &&
      !(nav_block >= IndexOfBlock('Land here')) &&
      (autopilot_in_flight() == true) )" deroute="Land here"/>
        <!-- Geofencing Z 2.5 -->
        <exception cond="((GetPosAlt() > 3.5) &&
      !(IndexOfBlock('Holding point') > nav_block) &&
      !(nav_block >= IndexOfBlock('Land here')) &&
      (autopilot_in_flight() == true) )" deroute="Land here"/>
        <!-- Geofencing Z 4.5 (constant RPM descent)-->
        <exception cond="((GetPosAlt() > 4.5) &&
      !(IndexOfBlock('Holding point') > nav_block) &&
      (autopilot_in_flight() == true) )" deroute="Landed"/>
        <!-- Bat low -->
        <!--<exception cond="(electrical.bat_low &&-->
        <!--!(IndexOfBlock('Holding point') > nav_block) &&-->
        <!--!(nav_block >= IndexOfBlock('Land here')) &&-->
        <!--(autopilot_in_flight() == true) )" deroute="Land here"/>  -->
        <!-- Bat critical (constant RPM no stabilization)-->
        <exception cond="(electrical.bat_critical &&
      !(IndexOfBlock('Holding point') > nav_block) &&
      !(nav_block >= IndexOfBlock('Land here')) &&
      (autopilot_in_flight() == true) )" deroute="Land here"/>
    </exceptions>
    <blocks>
        <block name="Wait GPS">
            <call_once fun="NavKillThrottle()"/>
            <while cond="!GpsFixValid()"/>
        </block>
        <block name="Geo init">
            <while cond="LessThan(NavBlockTime(), 2)"/>
            <call_once fun="NavSetAltitudeReferenceHere()"/>
        </block>
        <block name="Holding point">
            <call_once fun="NavKillThrottle()"/>
            <attitude pitch="0" roll="0" throttle="0" until="FALSE" vmode="throttle"/>
        </block>
        <!--<block name="Initialize External force estimator">-->
        <!--<call_once fun="rl_obstacle_avoidance_turn_on()"/>-->
        <!--</block>-->
        <block name="Start Obstacle Avoidance initialization">
            <call_once fun="rl_obstacle_avoidance_turn_on()"/>
            <attitude pitch="0" roll="0" throttle="0" until="set_estimated_accel_bias" vmode="throttle"/>
        </block>
        <block key="r" name="Start Engine">
            <call_once fun="rl_obstacle_avoidance_flight_status(10)" />
            <call_once fun="NavResurrect()"/>
            <attitude pitch="0" roll="0" throttle="0" until="FALSE" vmode="throttle"/>
            <!--<call_once fun="NavResurrect()"/>-->
        </block>
        <block key="t" name="Takeoff" strip_button="Takeoff" strip_icon="takeoff.png">
            <call_once fun="rl_obstacle_avoidance_flight_status(20)" />
            <exception cond="GetPosAlt() > 1.0" deroute="Estimate prop gains"/>
            <call_once fun="NavSetWaypointHere(WP_CLIMB)"/>
            <stay climb="nav_climb_vspeed" vmode="climb" wp="CLIMB"/>
        </block>
        <block name="Estimate prop gains">
            <call_once fun="NavSetWaypointHere(WP_STDBY)"/>
            <stay wp="STDBY" until="stage_time>1"/>
            <call_once fun="rl_obstacle_avoidance_flight_status(25)"/>
            <stay wp="STDBY" until="set_estimated_k_over_m"/>
        </block>
        <block key="s" name="Standby" strip_button="Standby" strip_icon="home.png">
            <call_once fun="rl_obstacle_avoidance_flight_status(30)" />
            <call_once fun="NavSetWaypointHere(WP_STDBY)"/>
            <stay wp="STDBY"/>
        </block>
        <block key="g" name="Go to measurement point" strip_button="Go" strip_icon="lookfore.png">
            <call_once fun="rl_obstacle_avoidance_flight_status(40)" />
            <go wp="MEASURE_START"/>
            <stay wp="MEASURE_START"/>
        </block>
        <block name="Rotate quadrotor head on">
            <call_once fun="nav_set_heading_deg(rl_wall_heading)" />
            <stay wp="MEASURE_START"/>
        </block>
        <block key="m" name="Start measurements">
            <call_once fun="rl_obstacle_avoidance_flight_status(50)" />
            <go wp = "MEASURE_0" />< stay wp = "MEASURE_0" until = "stage_time>5" />
            <go wp = "MEASURE_1" />< stay wp = "MEASURE_1" until = "stage_time>5" />
            <go wp = "MEASURE_2" />< stay wp = "MEASURE_2" until = "stage_time>5" />
            <go wp = "MEASURE_3" />< stay wp = "MEASURE_3" until = "stage_time>5" />
            <go wp = "MEASURE_4" />< stay wp = "MEASURE_4" until = "stage_time>5" />
            <go wp = "MEASURE_5" />< stay wp = "MEASURE_5" until = "stage_time>5" />
            <go wp = "MEASURE_6" />< stay wp = "MEASURE_6" until = "stage_time>5" />
            <go wp = "MEASURE_7" />< stay wp = "MEASURE_7" until = "stage_time>5" />
            <go wp = "MEASURE_8" />< stay wp = "MEASURE_8" until = "stage_time>5" />
            <go wp = "MEASURE_9" />< stay wp = "MEASURE_9" until = "stage_time>5" />
            <go wp = "MEASURE_10" />< stay wp = "MEASURE_10" until = "stage_time>5" />
            <go wp = "MEASURE_11" />< stay wp = "MEASURE_11" until = "stage_time>5" />
            <go wp = "MEASURE_12" />< stay wp = "MEASURE_12" until = "stage_time>5" />
            <go wp = "MEASURE_13" />< stay wp = "MEASURE_13" until = "stage_time>5" />
            <go wp = "MEASURE_14" />< stay wp = "MEASURE_14" until = "stage_time>5" />
            <go wp = "MEASURE_15" />< stay wp = "MEASURE_15" until = "stage_time>5" />
            <go wp = "MEASURE_16" />< stay wp = "MEASURE_16" until = "stage_time>5" />
            <go wp = "MEASURE_17" />< stay wp = "MEASURE_17" until = "stage_time>5" />
            <go wp = "MEASURE_18" />< stay wp = "MEASURE_18" until = "stage_time>5" />
            <go wp = "MEASURE_19" />< stay wp = "MEASURE_19" until = "stage_time>5" />
        </block>
        <block key="e" name="End measurements">
            <call_once fun="rl_obstacle_avoidance_flight_status(80)" />
            <go wp="MEASURE_START" />
            <stay wp="MEASURE_START" />
        </block>
        <block name="Go Home">
            <go wp="HOME"/>
            <stay wp="HOME"/>
        </block>
        <block key="l" name="Land here" strip_button="Land Here" strip_icon="land-right.png">
            <call_once fun="rl_obstacle_avoidance_flight_status(90)" />
            <call_once fun="NavSetWaypointHere(WP_TD)"/>
            <go wp="TD"/>
            <deroute block="Flare"/>
        </block>
        <block name="Land">
            <go wp="TD"/>
            <deroute block="Flare"/>
        </block>
        <block name="Flare">
            <exception cond="NavDetectGround()" deroute="Holding point"/>
            <exception cond="!nav_is_in_flight()" deroute="Landed"/>
            <exception cond="0.10 > GetPosAlt()" deroute="Landed"/>
            <call_once fun="NavStartDetectGround()"/>
            <stay climb="nav_descend_vspeed" vmode="climb" wp="TD"/>
        </block>
        <block name="Landed">
            <call_once fun="rl_obstacle_avoidance_flight_status(99)" />
            <call_once fun="NavKillThrottle()"/>
            <call_once fun="rl_obstacle_avoidance_turn_off()"/>
            <attitude pitch="0" roll="0" throttle="0" until="FALSE" vmode="throttle"/>
        </block>
    </blocks>
</flight_plan>
